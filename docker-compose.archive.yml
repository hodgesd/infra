# Ansible managed
---
version: "2"
services:
  nginxtest:
    image: nginx
    container_name: nginxtest
    ports:
      - 805:80
    restart: unless-stopped
  nginxtest2:
    image: nginx
    container_name: nginxtest2
    ports:
      - 804:80
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/derrickhodges/configportainer/data:/data
    labels:
      - "traefik.http.routers.whoami.rule=Host(`portainer.docker.docker_host`)"
    # ports:
    #   - 9000:9000
    #   - 8000:8000
  librespeed:
    image: adolfintel/speedtest
    container_name: librespeed
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - PASSWORD=tulanite
      - "traefik.http.routers.whoami.rule=Host(`librespeed.docker.docker_host`)"
    ports:
      - 8008:80
    restart: unless-stopped
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    volumes:
      - /Users/derrickhodges/confignextcloud/config:/config
      - /Users/derrickhodges/config/nextcloud/data:/data
    ports:
      - 443:443
    environment:
      - PUID="501"
      - PGID="20"
      - TZ="America/Chicago"
    restart: unless-stopped
  plex:
    image: linuxserver/plex:1.27.2
    container_name: plex
    restart: unless-stopped
  yourls:
    image: yourls:apache
    container_name: yourls
    volumes:
      - ..files/index.html:/var/www/html/index.html:ro
    environment:
      - YOURLS_DB_PASS=yourls
      - YOURLS_DB_USER=yourls
      - YOURLS_DB_HOST=mariadb
      - YOURLS_USER=hodgesd
      - YOURLS_PASS=tulanite
      - YOURLS_SITE=https://hdgs.me
    depends_on:
      - mariadb
    restart: unless-stopped
  mariadb:
    image: mariadb:10.8
    container_name: mariadb
    volumes:
      - /Users/derrickhodges/configmariadb/yourls:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=yourls
      - MYSQL_USER=yourls
      - MYSQL_PASSWORD=yourls
    restart: unless-stopped
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - 80:80
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.docker_host`)"